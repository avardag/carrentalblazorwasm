@using CarRental.Shared.Interfaces
@using CarRental.Shared.Entities
<MudDialog DisableSidePadding="true">
    <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.DirectionsCar" Class="mr-3 mb-n1"/>
                Details for @Vehicle.Make @Vehicle.Model ?
            </MudText>
        </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 600px; overflow-y: scroll">
            @if (_loading)
            {
                <MudProgressCircular Indeterminate="true"></MudProgressCircular>
            }
            else
            {
                @foreach(var prop in Vehicle.GetType().GetProperties())
                {
                  <MudTextField Value="@prop.GetValue(Vehicle, null)" Label="@prop.Name" ReadOnly="true"/>
               }
            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Ok">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public IVehicle Vehicle { get; set; } = new Vehicle();
    private bool _loading = false;

    private void Ok()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
}
