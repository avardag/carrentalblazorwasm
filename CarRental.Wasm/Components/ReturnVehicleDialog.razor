@using CarRental.Shared.Interfaces
@using CarRental.Shared.Entities
@using CarRental.Business
@inject ISnackbar Snackbar
@inject BookingProcessor BProc

<MudDialog Style="width: 500px">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1"/>
            Return @Vehicle.Make @Vehicle.Model ?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Value="@Vehicle.RegistrationNumber" Label="Reg No" ReadOnly="true"/>
        <MudDivider/>
        <MudNumericField T="int" @bind-Value="odometerReading" Disabled="@_loading" Label="Odometer Reading" Placeholder="Enter new odometer reading" Variant="Variant.Outlined" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Disabled="@_loading">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="HandleReturnSubmit" Disabled="@_loading">
            @if (_loading)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                <MudText Class="ms-2">Processing</MudText>
            }
            else
            {
                <MudText>Return</MudText>
            }
        </MudButton>
    </DialogActions>
    
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public IVehicle Vehicle { get; set; } = new Vehicle();

    private int odometerReading  { get; set; }
    private bool _loading = false;
    

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task HandleReturnSubmit()
    {
        _loading = true;
        if (odometerReading <= Vehicle.Odometer)
        {
            Snackbar.Add($"{odometerReading} can not be less than reading before rent. Fishy.", Severity.Error);
            _loading = false;
            return;
        }
        await BProc.ReturnVehicle(Vehicle.Id, odometerReading);
        _loading = false;
        Snackbar.Add($"{Vehicle.Make } {Vehicle.Model} successfully returned", Severity.Success);
        MudDialog.Close(DialogResult.Ok(Vehicle.Id));
    }
}